/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateDocsRequestBody = {
  /**
   * A list of documents to update. Each document must contain 'id' field to be updated.
   */
  docs: Array<{ [k: string]: any }>;
};

export type UpdateDocsRequest = {
  /**
   * Collection name.
   */
  collectionName: string;
  requestBody: UpdateDocsRequestBody;
};

/** @internal */
export const UpdateDocsRequestBody$inboundSchema: z.ZodType<
  UpdateDocsRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  docs: z.array(z.record(z.any())),
});

/** @internal */
export type UpdateDocsRequestBody$Outbound = {
  docs: Array<{ [k: string]: any }>;
};

/** @internal */
export const UpdateDocsRequestBody$outboundSchema: z.ZodType<
  UpdateDocsRequestBody$Outbound,
  z.ZodTypeDef,
  UpdateDocsRequestBody
> = z.object({
  docs: z.array(z.record(z.any())),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateDocsRequestBody$ {
  /** @deprecated use `UpdateDocsRequestBody$inboundSchema` instead. */
  export const inboundSchema = UpdateDocsRequestBody$inboundSchema;
  /** @deprecated use `UpdateDocsRequestBody$outboundSchema` instead. */
  export const outboundSchema = UpdateDocsRequestBody$outboundSchema;
  /** @deprecated use `UpdateDocsRequestBody$Outbound` instead. */
  export type Outbound = UpdateDocsRequestBody$Outbound;
}

export function updateDocsRequestBodyToJSON(
  updateDocsRequestBody: UpdateDocsRequestBody,
): string {
  return JSON.stringify(
    UpdateDocsRequestBody$outboundSchema.parse(updateDocsRequestBody),
  );
}

export function updateDocsRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<UpdateDocsRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateDocsRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateDocsRequestBody' from JSON`,
  );
}

/** @internal */
export const UpdateDocsRequest$inboundSchema: z.ZodType<
  UpdateDocsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  collectionName: z.string(),
  RequestBody: z.lazy(() => UpdateDocsRequestBody$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type UpdateDocsRequest$Outbound = {
  collectionName: string;
  RequestBody: UpdateDocsRequestBody$Outbound;
};

/** @internal */
export const UpdateDocsRequest$outboundSchema: z.ZodType<
  UpdateDocsRequest$Outbound,
  z.ZodTypeDef,
  UpdateDocsRequest
> = z.object({
  collectionName: z.string(),
  requestBody: z.lazy(() => UpdateDocsRequestBody$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateDocsRequest$ {
  /** @deprecated use `UpdateDocsRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateDocsRequest$inboundSchema;
  /** @deprecated use `UpdateDocsRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateDocsRequest$outboundSchema;
  /** @deprecated use `UpdateDocsRequest$Outbound` instead. */
  export type Outbound = UpdateDocsRequest$Outbound;
}

export function updateDocsRequestToJSON(
  updateDocsRequest: UpdateDocsRequest,
): string {
  return JSON.stringify(
    UpdateDocsRequest$outboundSchema.parse(updateDocsRequest),
  );
}

export function updateDocsRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateDocsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateDocsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateDocsRequest' from JSON`,
  );
}
